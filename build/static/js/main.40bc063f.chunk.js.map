{"version":3,"sources":["newComponents/ErrorModal.module.css","newComponents/Card.module.css","newComponents/Button.module.css","logo.svg","newComponents/Card.js","newComponents/Button.js","newComponents/ErrorModal.js","Helper/Wrapper.js","newComponents/AddUser.js","component/ExpenseDate.js","component/Card.js","component/ExpenseItem.js","component/ChartBar.js","component/Chart.js","component/ExpensesChart.js","component/ExpensesList.js","component/ExpensesFilter.js","component/Expenses.js","component/ExpenseForm.js","component/NewExpense.js","newComponents/UserList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","onClick","ErrorModal","backdrop","onConfirm","modal","header","title","footer","message","Wrapper","AddUser","nameInputRef","useRef","ageInputRef","useEffect","console","log","useState","error","setError","classess","input","onSubmit","e","preventDefault","enteredUsername","current","value","enteredAge","trim","length","onAddUser","htmlFor","id","ref","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","amount","ChartBar","max","Math","round","maxValue","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","label","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpensesList","items","ExpensesFilter","selected","onChange","onChangeFilter","target","Expenses","filteredYear","setFilteredYear","filterExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","expenseData","Date","onSaveExpenseData","min","step","NewExpense","clasName","enteredExpenseData","random","onAddExpense","UserList","users","user","name","age","dummy_expenses","App","usersList","setUsersList","setExpenses","prevExpenses","uName","uAge","prevUsersList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40bc063f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__wVnYq\",\"modal\":\"ErrorModal_modal__1QbZz\",\"header\":\"ErrorModal_header__1DsPb\",\"footer\":\"ErrorModal_footer__3-nYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__36_7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__xIzsB\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport classes from './Card.module.css';\r\nconst Card=(props)=>{\r\nreturn(\r\n    <div className={classes.card}>\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\nexport default Card;","import classes from './Button.module.css';\r\nimport React from 'react';\r\nconst Button=(props)=>{\r\n    return(\r\n    <button className=\"classes.button\"\r\n    type={props.type|| 'button'}\r\n    onClick={props.onClick}>\r\n\r\n{props.children}\r\n    </button>)\r\n}\r\nexport default Button;","import React from 'react';\r\nimport Card from './Card';\r\nimport classes from './ErrorModal.module.css';\r\nimport Button from './Button';\r\n\r\nconst ErrorModal = (props) => {\r\n    const Backdrop=(props)=>{\r\n\r\n    }\r\n    return (\r\n        <>\r\n<div className={classes.backdrop} onClick={props.onConfirm}/>\r\n        \r\n        <Card className={classes.modal}>\r\n            <div className={classes.header}>\r\n                <h2>\r\n                    {props.title}\r\n                </h2>\r\n            </div>\r\n            <div className={classes.footer}>\r\n                <p>\r\n                    {props.message}\r\n\r\n                </p>\r\n            </div>\r\n            <div className={classes.footer}>\r\n                <Button onClick={props.onConfirm}>OK</Button>\r\n            </div>\r\n        </Card>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ErrorModal;","const Wrapper=(props)=>{\r\n    return props.children;\r\n        \r\n\r\n\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useState,useRef, useEffect } from 'react';\r\nimport classess from './Card.module.css';\r\nimport ErrorModal from './ErrorModal';\r\nimport Button from './Button';\r\nimport Card from './Card';\r\nimport Wrapper from '../Helper/Wrapper';\r\nconst AddUser = (props) => {\r\n    const nameInputRef=useRef('');\r\n    const ageInputRef=useRef('');\r\n    useEffect(()=>{\r\n        console.log(\"check\");\r\n    },[]);\r\n    const [error, setError] = useState()\r\n        ; //const [enteredUsername, setEnteredUsername] = useState('');\r\n  //const [enteredAge, setEnteredAge] = useState('');\r\n    /*const userChangeHandler = (e) => {\r\n        setEnteredUsername(e.target.value);\r\n        //e.target.value();\r\n\r\n    }*/\r\n   /* const ageChangeHandler = (e) => {\r\n        setEnteredAge(e.target.value);\r\n        //e.target.value();\r\n\r\n    }*/\r\n    const addUserHandler = (e) => {\r\n        e.preventDefault();\r\n        const enteredUsername=nameInputRef.current.value;\r\n        const enteredAge=ageInputRef.current.value;\r\nconsole.log(nameInputRef.current.value);\r\n\r\n\r\n        if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n\r\n            setError({\r\n                title: 'invalid username',\r\n                message: 'enter correct username'\r\n            });\r\n\r\n\r\n            return;\r\n        }\r\n        if (+enteredAge < 1) {\r\n            setError({\r\n                title: 'wrong age',\r\n                message: 'enter correct age >0'\r\n            });\r\n            return;\r\n        }\r\n        props.onAddUser(enteredUsername, enteredAge);\r\n        //console.log(enteredAge,enteredUsername)\r\nnameInputRef.current.value='';\r\nageInputRef.current.value='';\r\n       // setEnteredUsername('');\r\n        //setEnteredAge('');\r\n\r\n    };\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            {error &&\r\n                <ErrorModal title={error.title} message={error.message} onConfirm={errorHandler} ></ErrorModal>\r\n            }\r\n            <Card className={classess.input}>\r\n                <form onSubmit={addUserHandler}>\r\n                    <label htmlFor=\"username\">username</label>\r\n                    <input type=\"text\"\r\n                        id=\"username\"\r\n                        ref={nameInputRef}\r\n                     \r\n        ></input>\r\n                    <label htmlFor=\"age\">age</label>\r\n                    <input type=\"number\"\r\n                        id=\"age\"\r\n                        ref={ageInputRef}\r\n                        ></input>\r\n                    <Button type=\"submit\">Add user</Button>\r\n                </form></Card></Wrapper>\r\n    )\r\n};\r\nexport default AddUser;","function ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\r\n    const year = props.date.getFullYear();\r\n    return(\r\n        <div>\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div>{year}</div>\r\n        <div>{day}</div>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css'\r\nfunction Card(props){\r\n    const classess= 'card' + props.className;\r\n    return<div className={classess}>{props.children}\r\n    </div>\r\n}\r\n\r\nexport default Card;\r\n","\r\nimport React, { useState } from 'react';\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n    const [title, setTitle] = useState(props.title);\r\n    //let title = props.title;\r\n    const clickHandler = () => {\r\n        setTitle('updated!!')\r\n            ;       // title = \"updated !\";\r\n        console.log(title);\r\n        //console.log('clicked');\r\n    }\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n\r\n                <div className=\"expense-item-description\"><h2>Expense Item</h2></div>\r\n                <div>{props.title}</div>\r\n                <div className=\"expense-item-price\">{props.amount}</div>\r\n                <ExpenseDate date={props.date}></ExpenseDate>\r\n                <button onClick={clickHandler}>change title</button>\r\n\r\n            </Card> </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nconst ChartBar = (props) => {\r\n    let barFillHeight='0%';\r\n    if(props.max>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)+'%';\r\n    }\r\n    return(\r\n    <div className=\"chart_bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" >\r\n\r\n            </div>\r\n        </div>\r\n<div className=\"chart-bar__label\"></div>\r\n\r\n    </div>);\r\n}\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\"\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => <ChartBar\r\n                value={dataPoint.value}\r\n                key={dataPoint.label}\r\n                maxValue={totalMaximum}\r\n                label={dataPoint.label}></ChartBar>)}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from './Chart';\r\n\r\nconst ExpensesChart=(props)=>{\r\n    const chartDataPoints=[\r\n        {\r\n            label:'january', value:0\r\n        },\r\n        {\r\n            label:'febuary', value:0\r\n        },\r\n        {\r\n            label:'march', value:0\r\n        }\r\n    ];\r\n    for(const expense of props.expenses){\r\n        const expenseMonth=expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value+=expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}></Chart>\r\n}\r\nexport default ExpensesChart;","import ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList=(props)=>{\r\n//let expenseContent=<p>no expense found</p>;\r\nif(props.items.length===0){\r\n\r\nreturn <h2>found no expense</h2>}\r\n    \r\n    return(\r\n        <div>\r\n  <ul className=\"expense-list\">\r\n      {props.items.map((expense)=>(\r\n          <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date} />\r\n      ))}\r\n  \r\n  </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ExpensesList;","const ExpensesFilter=(props)=>{\r\n    const dropDownChangeHandler=(e)=>{\r\n        props.onChangeFilter(e.target.value);\r\n    };\r\n    return(\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n<label>filter by year</label>\r\n<select value={props.selected} onChange={dropDownChangeHandler}>\r\n    <option value=\"2022\">2022</option>\r\n    <option value=\"2021\">2021</option>\r\n    <option value=\"2020\">2020</option>\r\n    <option value=\"2019\">2019</option></select>                \r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n    export default ExpensesFilter;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport React,{useState} from \"react\";\r\nimport ExpensesChart from './ExpensesChart'\r\nimport Card from \"./Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\"\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n    const filterExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpensesFilter>\r\n<ExpensesChart expenses={filterExpenses} ></ExpensesChart>\r\n<ExpensesList items={filterExpenses}></ExpensesList>\r\n           {/* {props.items.map((expense) =>\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date} />)}\r\n\r\n           */}\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default Expenses;","import { useState } from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n     const [enteredTitle,setEnteredTitle]=useState('');\r\n    const [enteredAmount,setEnteredAmount]=useState('');\r\n    const [enteredDate, setEnteredDate]=useState('');\r\n    /*const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    });*/\r\n    ///document.getElementById('').addEventListener()\r\n    const titleChangeHandler = (e) => {\r\n        //console.log(e.target.value);\r\n       /* setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredTitle: e.target.value\r\n            }\r\n        })*/\r\n\r\n\r\n        setEnteredTitle(e.target.value)\r\n    }\r\n\r\n    const amountChangeHandler = (e) => {\r\n        //console.log(e.target.value);\r\n         setEnteredAmount(e.target.value)\r\n       /* setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredAmount: e.target.value\r\n            }\r\n        })*/\r\n    }\r\n\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value);\r\n        /*setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredDate: e.target.value\r\n            }\r\n        })*/\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        //console.log(expenseData);\r\nprops.onSaveExpenseData(expenseData);\r\n       setEnteredTitle('');\r\n       setEnteredAmount('');\r\n       setEnteredDate('');\r\n    };\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>amount</label>\r\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>date</label>\r\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" step=\"2022-12-31\" onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button >add expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nconst NewExpense=(props)=>{\r\n    const saveExpenseDataHandler=(enteredExpenseData)=>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n        //console.log(expenseData)\r\n        props.onAddExpense(expenseData);\r\n    };\r\n    return(\r\n        <div clasName=\"new-expense\">\r\n<ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React from'react';\r\nimport Card from './Card';\r\nconst UserList=(props)=>{\r\n    return(\r\n    <Card><ul>\r\n{props.users.map((user)=>\r\n(\r\n<li key={user.id}>{\r\n    user.name}({user.age} years old)</li>))}\r\n    </ul></Card>)\r\n}\r\nexport default UserList;","import logo from './logo.svg';\nimport './App.css';\nimport AddUser from './newComponents/AddUser';\nimport React, { useState } from 'react';\n//import ExpenseItem from './component/ExpenseItem';\nimport Expenses from './component/Expenses';\nimport NewExpense from './component/NewExpense';\nimport UserList from './newComponents/UserList';\nconst dummy_expenses = [\n  {\n    id: 1,\n    title: \"car insurance\",\n    amount: 234.89,\n    date: new Date(2021, 12, 28),\n\n  },\n  {\n    id: 2,\n    title: \"car insurance\",\n    amount: 234.89,\n    date: new Date(2021, 12, 28),\n  },\n  {\n\n    title: \"car insurance\",\n    amount: 234.89,\n    date: new Date(2021, 12, 28),\n  }\n];\n\n\nconst App = () => {\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList((prevUsersList) => {\n      return [{ name: uName, age: uAge,id:Math.random().toString }, ...prevUsersList ];\n   \n\n    });\n    console.log(uName,uAge);\n  };\n\n  const [expense, setExpenses] = useState(dummy_expenses)\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n    // console.log(expense);\n  };\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expense}></Expenses>\n      <AddUser onAddUser={addUserHandler}></AddUser>\n      <UserList users={usersList}></UserList>\n    </>\n  );\n\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}